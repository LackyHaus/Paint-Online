{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport canvasState from \"@/store/canvasState\";\nimport Brush from \"@/tools/Brush\";\nexport default class ToolsSync {\n  constructor(msg, socket, id) {\n    this.msg = msg;\n    this.socket = socket;\n    this.id = id;\n    this.ctx = canvasState.ctx;\n    this.ctx.strokeStyle = msg.figure.color;\n    this.ctx.fillStyle = msg.figure.color;\n    this.ctx.lineWidth = msg.figure.width;\n    this.handleDraw();\n  }\n  handleDraw() {\n    const {\n      figure\n    } = this.msg;\n    switch (figure.type) {\n      case \"brush\":\n        Brush.draw(this.ctx, figure.x, figure.y);\n        break;\n      case \"rect\":\n        this.ctx.rect(figure.x, figure.y, figure.w, figure.h);\n        this.ctx.fill();\n        this.ctx.stroke();\n        break;\n      case \"circle\":\n        // Добавьте логику для рисования круга\n        break;\n      case \"eraser\":\n        // Добавьте логику для ластика\n        break;\n      case \"line\":\n        // Добавьте логику для рисования линии\n        break;\n      case \"up\":\n        {\n          this.ctx.beginPath();\n          this.sendCanvasState(this.socket, this.id);\n          break;\n        }\n      case \"canvasState\":\n        {\n          if (figure.canvasState === \"\") {\n            return;\n          }\n          const img = new Image();\n          img.src = figure.canvasState;\n          img.onload = () => {\n            this.ctx.clearRect(0, 0, canvasState.canvas.width, canvasState.canvas.height);\n            this.ctx.drawImage(img, 0, 0);\n          };\n          break;\n        }\n      default:\n        console.log(\"Unknown figure type:\", figure.type);\n    }\n  }\n  sendCanvasState(socket, id) {\n    // socket.send(\n    //   JSON.stringify({\n    //     id,\n    //     method: \"save\",\n    //     figure: {\n    //       type: \"canvasState\",\n    //       canvasState: canvasState.canvas.toDataURL(),\n    //     },\n    //   })\n    // );\n\n    // Binary method Uint8ClampedArray\n    const imageData = this.ctx.getImageData(0, 0, canvasState.canvas.width, canvasState.canvas.height);\n    const data = imageData.data;\n    const buffer = new ArrayBuffer(data.length);\n    const buf8 = new Uint8ClampedArray(buffer);\n    const data8 = new Uint8ClampedArray(data);\n    buf8.set(data8);\n    socket.send(JSON.stringify({\n      id,\n      method: \"save\",\n      figure: {\n        type: \"canvasState\",\n        canvasState: buf8\n      }\n    }));\n  }\n}","map":{"version":3,"names":["canvasState","Brush","ToolsSync","constructor","msg","socket","id","ctx","strokeStyle","figure","color","fillStyle","lineWidth","width","handleDraw","type","draw","x","y","rect","w","h","fill","stroke","beginPath","sendCanvasState","img","Image","src","onload","clearRect","canvas","height","drawImage","console","log","imageData","getImageData","data","buffer","ArrayBuffer","length","buf8","Uint8ClampedArray","data8","set","send","JSON","stringify","method"],"sources":["D:/Vue Projects/paintonline/client/src/utils/toolsSync.js"],"sourcesContent":["import canvasState from \"@/store/canvasState\";\r\nimport Brush from \"@/tools/Brush\";\r\n\r\nexport default class ToolsSync {\r\n  constructor(msg, socket, id) {\r\n    this.msg = msg;\r\n    this.socket = socket;\r\n    this.id = id;\r\n    this.ctx = canvasState.ctx;\r\n    this.ctx.strokeStyle = msg.figure.color;\r\n    this.ctx.fillStyle = msg.figure.color;\r\n    this.ctx.lineWidth = msg.figure.width;\r\n    this.handleDraw();\r\n  }\r\n\r\n  handleDraw() {\r\n    const { figure } = this.msg;\r\n\r\n    switch (figure.type) {\r\n      case \"brush\":\r\n        Brush.draw(this.ctx, figure.x, figure.y);\r\n        break;\r\n\r\n      case \"rect\":\r\n        this.ctx.rect(figure.x, figure.y, figure.w, figure.h);\r\n        this.ctx.fill();\r\n        this.ctx.stroke();\r\n        break;\r\n\r\n      case \"circle\":\r\n        // Добавьте логику для рисования круга\r\n        break;\r\n\r\n      case \"eraser\":\r\n        // Добавьте логику для ластика\r\n        break;\r\n\r\n      case \"line\":\r\n        // Добавьте логику для рисования линии\r\n        break;\r\n\r\n      case \"up\": {\r\n        this.ctx.beginPath();\r\n        this.sendCanvasState(this.socket, this.id);\r\n        break;\r\n      }\r\n\r\n      case \"canvasState\": {\r\n        if (figure.canvasState === \"\") {\r\n          return;\r\n        }\r\n        const img = new Image();\r\n        img.src = figure.canvasState;\r\n        img.onload = () => {\r\n          this.ctx.clearRect(0, 0, canvasState.canvas.width, canvasState.canvas.height);\r\n          this.ctx.drawImage(img, 0, 0);\r\n        };\r\n        break;\r\n      }\r\n\r\n      default:\r\n        console.log(\"Unknown figure type:\", figure.type);\r\n    }\r\n  }\r\n\r\n  sendCanvasState(socket, id) {\r\n    // socket.send(\r\n    //   JSON.stringify({\r\n    //     id,\r\n    //     method: \"save\",\r\n    //     figure: {\r\n    //       type: \"canvasState\",\r\n    //       canvasState: canvasState.canvas.toDataURL(),\r\n    //     },\r\n    //   })\r\n    // );\r\n\r\n    // Binary method Uint8ClampedArray\r\n    const imageData = this.ctx.getImageData(0, 0, canvasState.canvas.width, canvasState.canvas.height);\r\n    const data = imageData.data;\r\n    const buffer = new ArrayBuffer(data.length);\r\n    const buf8 = new Uint8ClampedArray(buffer);\r\n    const data8 = new Uint8ClampedArray(data);\r\n    buf8.set(data8);\r\n    socket.send(\r\n      JSON.stringify({\r\n        id,\r\n        method: \"save\",\r\n        figure: {\r\n          type: \"canvasState\",\r\n          canvasState: buf8,\r\n        },\r\n      })\r\n    );\r\n\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}