{"ast":null,"code":"import canvasState from \"@/store/canvasState\";\nimport toolstate from \"@/store/toolstate\";\nimport Brush from \"@/tools/Brush\";\nimport ToolsSync from \"@/utils/toolsSync\";\nexport const webSocketConnection = canvasElement => {\n  const ws = new WebSocket(\"ws://localhost:5000/ws\");\n  canvasState.setSessionId(window.location.pathname.split(\"/\").pop());\n  canvasState.setSocket(ws);\n  toolstate.setTool(new Brush(canvasElement, ws, canvasState.sessionid));\n  ws.onopen = () => {\n    ws.send(JSON.stringify({\n      id: window.location.pathname.split(\"/\").pop(),\n      method: \"connection\"\n    }));\n  };\n  ws.onmessage = event => {\n    let msg = JSON.parse(event.data);\n    switch (msg.method) {\n      case \"connection\":\n        break;\n      case \"draw\":\n        new ToolsSync(msg);\n        break;\n    }\n  };\n};","map":{"version":3,"names":["canvasState","toolstate","Brush","ToolsSync","webSocketConnection","canvasElement","ws","WebSocket","setSessionId","window","location","pathname","split","pop","setSocket","setTool","sessionid","onopen","send","JSON","stringify","id","method","onmessage","event","msg","parse","data"],"sources":["D:/Vue Projects/paintonline/client/src/utils/webSocket.js"],"sourcesContent":["import canvasState from \"@/store/canvasState\";\r\nimport toolstate from \"@/store/toolstate\";\r\nimport Brush from \"@/tools/Brush\";\r\n\r\nimport ToolsSync from \"@/utils/toolsSync\";\r\n\r\nexport const webSocketConnection = (canvasElement) => {\r\n    const ws = new WebSocket(\"ws://localhost:5000/ws\");\r\n\r\n    canvasState.setSessionId(window.location.pathname.split(\"/\").pop());\r\n    canvasState.setSocket(ws);\r\n\r\n    toolstate.setTool(new Brush(canvasElement, ws, canvasState.sessionid));\r\n\r\n    ws.onopen = () => {\r\n    ws.send(JSON.stringify({\r\n        id: window.location.pathname.split(\"/\").pop(),\r\n        method: \"connection\",\r\n    }));\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n    let msg = JSON.parse(event.data);\r\n    switch (msg.method) {\r\n        case \"connection\":\r\n        break;\r\n        case \"draw\":\r\n            new ToolsSync(msg)\r\n        break;\r\n    }\r\n    };\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,KAAK,MAAM,eAAe;AAEjC,OAAOC,SAAS,MAAM,mBAAmB;AAEzC,OAAO,MAAMC,mBAAmB,GAAIC,aAAa,IAAK;EAClD,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;EAElDP,WAAW,CAACQ,YAAY,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;EACnEb,WAAW,CAACc,SAAS,CAACR,EAAE,CAAC;EAEzBL,SAAS,CAACc,OAAO,CAAC,IAAIb,KAAK,CAACG,aAAa,EAAEC,EAAE,EAAEN,WAAW,CAACgB,SAAS,CAAC,CAAC;EAEtEV,EAAE,CAACW,MAAM,GAAG,MAAM;IAClBX,EAAE,CAACY,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;MACnBC,EAAE,EAAEZ,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;MAC7CS,MAAM,EAAE;IACZ,CAAC,CAAC,CAAC;EACH,CAAC;EAEDhB,EAAE,CAACiB,SAAS,GAAIC,KAAK,IAAK;IAC1B,IAAIC,GAAG,GAAGN,IAAI,CAACO,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;IAChC,QAAQF,GAAG,CAACH,MAAM;MACd,KAAK,YAAY;QACjB;MACA,KAAK,MAAM;QACP,IAAInB,SAAS,CAACsB,GAAG,CAAC;QACtB;IACJ;EACA,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}